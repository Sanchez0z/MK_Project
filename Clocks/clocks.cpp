#include "clocks.h"

void pris(uint16_t* tmp, uint16_t* num)
{
	for (int i = 0; i < 21; i++)
	{
		tmp[i] = num[i];
	}
}

void choose_number(uint16_t* tmp, int num)
{
	uint16_t number_zero[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x08F,
	0x0FF,0x000,0x0FF,
	0x0F0,0x000,0x0F0,
	0xFC0,0x000,0xFC0,
	0xF00,0x000,0xF00,
	0xF0F,0xF0F,0xF0F
	};

	uint16_t number_one[21]
	{
	0x000,0x000,0x00F,
	0x000,0x08F,0x08F,
	0x0FF,0x000,0x0FF,
	0x000,0x000,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0x000,0x000,0xF0F
	};
	
	uint16_t number_two[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x08F,
	0x000,0x000,0x0FF,
	0x000,0x000,0x0F0,
	0x000,0xFC0,0x000,
	0xF00,0x000,0x000,
	0xF0F,0xF0F,0xF0F
	};

	uint16_t number_three[21]
	{
	0x00F,0x00F,0x00F,
	0x000,0x000,0x08F,
	0x000,0x000,0x0FF,
	0x0F0,0x0F0,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0xF0F,0xF0F,0xF0F
	};

	uint16_t number_four[21]
	{
	0x00F,0x000,0x00F,
	0x08F,0x000,0x08F,
	0x0FF,0x000,0x0FF,
	0x0F0,0x0F0,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0x000,0x000,0xF0F
	};

	uint16_t number_five[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x000,
	0x0FF,0x000,0x000,
	0x0F0,0x0F0,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0xF0F,0xF0F,0xF0F,
	};

	uint16_t number_six[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x000,
	0x0FF,0x000,0x000,
	0x0F0,0x0F0,0x0F0,
	0xFC0,0x000,0xFC0,
	0xF00,0x000,0xF00,
	0xF0F,0xF0F,0xF0F
	};

	uint16_t number_seven[21]
	{
	0x00F,0x00F,0x00F,
	0x000,0x000,0x08F,
	0x000,0x000,0x0FF,
	0x000,0x000,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0x000,0x000,0xF0F
	};

	uint16_t number_eight[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x08F,
	0x0FF,0x000,0x0FF,
	0x0F0,0x0F0,0x0F0,
	0xFC0,0x000,0xFC0,
	0xF00,0x000,0xF00,
	0xF0F,0xF0F,0xF0F
	};

	uint16_t number_nine[21]
	{
	0x00F,0x00F,0x00F,
	0x08F,0x000,0x08F,
	0x0FF,0x000,0x0FF,
	0x0F0,0x0F0,0x0F0,
	0x000,0x000,0xFC0,
	0x000,0x000,0xF00,
	0xF0F,0xF0F,0xF0F
	};
	switch (num) 
	{
	case 0:
		pris(tmp, number_zero);
		break;
	case 1:
		pris(tmp, number_one);
		break;
	case 2:
		pris(tmp, number_two);
		break;
	case 3:
		pris(tmp, number_three);
		break;
	case 4:
		pris(tmp, number_four);
		break;
	case 5:
		pris(tmp, number_five);
		break;
	case 6:
		pris(tmp, number_six);
		break;
	case 7:
		pris(tmp, number_seven);
		break;
	case 8:
		pris(tmp, number_eight);
		break;
	case 9:
		pris(tmp, number_nine);
		break;
	}
}

void connect(uint16_t *bitmap, int hours, int minutes, int alarm, bool wifi) 
{
	int j = 0;
	int i = 16;
	int num = 0;
	uint16_t number[][21] = { 
	0x000,0x000,0x000,
	0x000,0x000,0x000,
	0x000,0x000,0x000,
	0x000,0x000,0x000,
	0x000,0x000,0x000,
	0x000,0x000,0x000,
	0x000,0x000,0x000 };

	uint16_t internet_off[35]{
	0x000,0x000,0x00F,0x00F,0x00F,0x000,0x000,
	0x000,0x00F,0x000,0x000,0x000,0x00F,0x000,
	0x00F,0x000,0x000,0x00F,0x000,0x000,0x00F,
	0x000,0x000,0x00F,0x000,0x00F,0x000,0x000,
	0x000,0x000,0x000,0x00F,0x000,0x000,0x000,
	};

	uint16_t internet_on[35]{
	0x000,0x000,0x0F0,0x0F0,0x0F0,0x000,0x000,
	0x000,0x0F0,0x000,0x000,0x000,0x0F0,0x000,
	0x0F0,0x000,0x000,0x0F0,0x000,0x000,0x0F0,
	0x000,0x000,0x0F0,0x000,0x0F0,0x000,0x000,
	0x000,0x000,0x000,0x0F0,0x000,0x000,0x000
	};

	uint16_t alarm_on[25]{
	0x000,0x0F0,0x0F0,0x0F0,0x000,
	0x0F0,0x000,0x0F0,0x000,0x0F0,
	0x0F0,0x000,0x0F0,0x0F0,0x0F0,
	0x0F0,0x000,0x000,0x000,0x0F0,
	0x000,0x0F0,0x0F0,0x0F0,0x000
	};

	uint16_t alarm_off[25]{
	0x000,0x00F,0x00F,0x00F,0x000,
	0x00F,0x000,0x00F,0x000,0x00F,
	0x00F,0x000,0x00F,0x00F,0x00F,
	0x00F,0x000,0x000,0x000,0x00F,
	0x000,0x00F,0x00F,0x00F,0x000
	};

	for (int g = 0; g < 4; ++g) 
	{
		switch (g)
		{
		case 0:
			num = hours / 10;
			i = 0;
			break;
		case 1:
			num = hours % 10;
			i = 4;
			break;
		case 2:
			num = minutes / 10;
			i = 9;
			break;
		case 3:
			num = minutes % 10;
			i = 13;
			break;
		}
		choose_number(number[0], num);
		for (int k = 0; k < 7; ++k) 
		{
			for (int l = 0; l < 3; ++l) 
			{
				bitmap[i++] = number[0][j++];
			}
			i += 13;
		}
		j = 0;
	}
	bitmap[23] = 0x999;
	bitmap[24] = 0x999;
	bitmap[39] = 0x999;
	bitmap[40] = 0x999;
	bitmap[71] = 0x999;
	bitmap[72] = 0x999;
	bitmap[87] = 0x999;
	bitmap[88] = 0x999;

	i = 145;
	if (wifi)
	{
		for (int k = 0; k < 5; ++k)
		{
			for (int l = 0; l < 7; ++l)
			{
				bitmap[i++] = internet_on[j++];
			}
			i += 9;
		}
	}
	else
	{
		for (int k = 0; k < 5; ++k)
		{
			for (int l = 0; l < 7; ++l)
			{
				bitmap[i++] = internet_off[j++];
			}
			i += 9;
		}
	}

	i = 154;
	j = 0;
	if (alarm == -1)
	{
		for (int k = 0; k < 5; ++k)
		{
			for (int l = 0; l < 5; ++l)
			{
				bitmap[i++] = alarm_off[j++];
			}
			i += 11;
		}
	}
	else
	{
		for (int k = 0; k < 5; ++k)
		{
			for (int l = 0; l < 5; ++l)
			{
				bitmap[i++] = alarm_on[j++];
			}
			i += 11;
		}
	}
}
